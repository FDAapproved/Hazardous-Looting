class HDHarmfulBox : HDActor
{
	int errorthresh;
	property errorthresh : errorthresh;
	int errorchance;
	property errorchance : errorchance;


	int damagemin;
	property damagemin : damagemin;
	int damagemax;
	property damagemax : damagemax;
	bool givetargetbody;
	property givetargetbody : givetargetbody;
	string damagetype;
	property damagetype : damagetype;
	
	
	class<actor>  visualaid;
	property visualaid : visualaid;
	class<actor>  prize;
	property prize : prize;
	
	
	int burnmin;
	property burnmin : burnmin;
	int burnmax;
	property burnmax : burnmax;
	
	default
	{
		HDHarmfulBox.errorthresh 0;
		HDHarmfulBox.errorchance 0;
		

		HDHarmfulBox.damagemin 0;
		HDHarmfulBox.damagemax 0;
		HDHarmfulBox.givetargetbody true;
		HDHarmfulBox.damagetype "natural";
		HDHarmfulBox.visualaid "HDSmoke";
		HDHarmfulBox.prize "HDSmoke";	

		HDHarmfulBox.burnmin 0;	
		HDHarmfulBox.burnmax 0;	
		+solid
		+nogravity
		+noblockmap
		radius 100;
		height 100;
	}
	
	override void tick()
	{
		super.tick();
		if(isfrozen())return;
		trymove(pos.xy, false);
		
		if(blockingmobj)
		{
			int damage = random(damagemin, damagemax);
			int burn   = random(burnmin, burnmax);
			let ppp = HDplayerpawn(blockingmobj);
			
			// %-chance based method. 
			if(errorthresh)
			{
				console.printf("Player.health "..ppp.health);
				if(ppp.health <= errorthresh)
				{
					if(errorchance > 0)
					{
						if(random(0, 100) >= (100 - errorchance))
						{
							damage=0;
						}
					}
					else
					{
						damage = 0;
					}
				}
				else
				{
					damage = 0;
				}
			}


			// In case you end up somehow setting this to "".
			if(damagetype == "")
			{
				damagetype = "natural";
			}
			
			if(burn != 0)
			{
				A_Immolate(ppp,ppp,burn);
			}
			
			
			// Only damage you if you... you know, would take damage.
			if(damage)
			{
				if(givetargetbody)ppp.GiveBody(damage, ppp.SpawnHealth());
				if(damage)ppp.DamageMobj(ppp,ppp,damage,damagetype);
			}
			
			// Spawn a user-defined actor, harmful or not. 
			if(prize != "")
			{
				let pri = Actor.Spawn(prize, pos + (0,0,3), SXF_TRANSFERSPECIAL | SXF_NOCHECKPOSITION);
				if(pri)pri.vel = (frandom[loot](-1, 1), frandom[loot](-1, 1), frandom[loot](1, 2));
			}
			if(visualaid != "")
			{
				Actor.Spawn(visualaid, pos + (0,0,3), SXF_TRANSFERSPECIAL | SXF_NOCHECKPOSITION);
			}
			destroy();
		}
	}
	
	// Only damages players. Probably could just be HDActors.
	override bool cancollidewith(actor other,bool passive)
	{
		return hdplayerpawn(other);
	}	
}